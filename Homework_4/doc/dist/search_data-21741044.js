searchData={"items":[{"type":"module","title":"Issues","doc":"Documentation for `Issues`.","ref":"Issues.html"},{"type":"function","title":"Issues.hello/0","doc":"Hello world.","ref":"Issues.html#hello/0"},{"type":"function","title":"Examples - Issues.hello/0","doc":"iex> Issues.hello()\n    :world","ref":"Issues.html#hello/0-examples"},{"type":"module","title":"Issues.CLI","doc":"Handle the command line parsing and the dispatch to\nthe various functions that end up generating a\ntable of the last _n_ issues in a github project.","ref":"Issues.CLI.html"},{"type":"function","title":"Issues.CLI.args_to_internal_representation/1","doc":"Convert the parsed arguments to an internal representation.","ref":"Issues.CLI.html#args_to_internal_representation/1"},{"type":"function","title":"Parameters - Issues.CLI.args_to_internal_representation/1","doc":"- args: List of parsed arguments.","ref":"Issues.CLI.html#args_to_internal_representation/1-parameters"},{"type":"function","title":"Examples - Issues.CLI.args_to_internal_representation/1","doc":"iex> Issues.CLI.args_to_internal_representation([\"elixir-lang\", \"elixir\", \"5\"])\n    {\"elixir-lang\", \"elixir\", 5}\n\n    iex> Issues.CLI.args_to_internal_representation([\"elixir-lang\", \"elixir\"])\n    {\"elixir-lang\", \"elixir\", 4}\n\n    iex> Issues.CLI.args_to_internal_representation([\"-h\"])\n    :help","ref":"Issues.CLI.html#args_to_internal_representation/1-examples"},{"type":"function","title":"Issues.CLI.decode_response/1","doc":"Decode the response from the Github API.","ref":"Issues.CLI.html#decode_response/1"},{"type":"function","title":"Parameters - Issues.CLI.decode_response/1","doc":"- response: Tuple of `{:ok, body}` or `{:error, error}`.","ref":"Issues.CLI.html#decode_response/1-parameters"},{"type":"function","title":"Examples - Issues.CLI.decode_response/1","doc":"iex> Issues.CLI.decode_response({:ok, body})\n    body\n\n    iex> Issues.CLI.decode_response({:error, error})\n    :ok","ref":"Issues.CLI.html#decode_response/1-examples"},{"type":"function","title":"Issues.CLI.last/2","doc":"Return the last `count` items from the list.","ref":"Issues.CLI.html#last/2"},{"type":"function","title":"Parameters - Issues.CLI.last/2","doc":"- list: List of items.\n  - count: Number of items to return.","ref":"Issues.CLI.html#last/2-parameters"},{"type":"function","title":"Returns - Issues.CLI.last/2","doc":"The last `count` items from the list.","ref":"Issues.CLI.html#last/2-returns"},{"type":"function","title":"Issues.CLI.main/1","doc":"Run the CLI with the given arguments.","ref":"Issues.CLI.html#main/1"},{"type":"function","title":"Parameters - Issues.CLI.main/1","doc":"- argv: List of command line arguments.","ref":"Issues.CLI.html#main/1-parameters"},{"type":"function","title":"Examples - Issues.CLI.main/1","doc":"iex> Issues.CLI.run([\"elixir-lang\", \"elixir\", \"5\"])\n    :ok","ref":"Issues.CLI.html#main/1-examples"},{"type":"function","title":"Issues.CLI.parse_args/1","doc":"Parse the command line arguments.\n\n`argv` can be -h or --help, which returns :help.\nOtherwise it is a github user name, project name, and (optionally)\nthe number of entries to format.\nReturn a tuple of `{ user, project, count }`, or `:help` if help was given.","ref":"Issues.CLI.html#parse_args/1"},{"type":"function","title":"Parameters - Issues.CLI.parse_args/1","doc":"- argv: List of command line arguments.","ref":"Issues.CLI.html#parse_args/1-parameters"},{"type":"function","title":"Examples - Issues.CLI.parse_args/1","doc":"iex> Issues.CLI.parse_args([\"elixir-lang\", \"elixir\", \"5\"])\n    {\"elixir-lang\", \"elixir\", 5}\n\n    iex> Issues.CLI.parse_args([\"-h\"])\n    :help","ref":"Issues.CLI.html#parse_args/1-examples"},{"type":"function","title":"Issues.CLI.process/1","doc":"Process the parsed arguments.","ref":"Issues.CLI.html#process/1"},{"type":"function","title":"Parameters - Issues.CLI.process/1","doc":"- args: Tuple of `{user, project, count}` or `:help`.","ref":"Issues.CLI.html#process/1-parameters"},{"type":"function","title":"Examples - Issues.CLI.process/1","doc":"iex> Issues.CLI.process(:help)\n    :ok\n\n    iex> Issues.CLI.process({\"elixir-lang\", \"elixir\", 5})\n    :ok","ref":"Issues.CLI.html#process/1-examples"},{"type":"function","title":"Issues.CLI.sort_into_descending_order/1","doc":"Sort the list of issues into descending order.","ref":"Issues.CLI.html#sort_into_descending_order/1"},{"type":"function","title":"Parameters - Issues.CLI.sort_into_descending_order/1","doc":"- list_of_issues: List of issues.","ref":"Issues.CLI.html#sort_into_descending_order/1-parameters"},{"type":"function","title":"Returns - Issues.CLI.sort_into_descending_order/1","doc":"The list of issues sorted into descending order.","ref":"Issues.CLI.html#sort_into_descending_order/1-returns"},{"type":"module","title":"Issues.GithubIssues","doc":"A module to fetch issues from a GitHub repository.","ref":"Issues.GithubIssues.html"},{"type":"function","title":"Issues.GithubIssues.fetch/2","doc":"Fetches issues from the specified GitHub repository.","ref":"Issues.GithubIssues.html#fetch/2"},{"type":"function","title":"Parameters - Issues.GithubIssues.fetch/2","doc":"- user: The GitHub username.\n- project: The GitHub repository name.","ref":"Issues.GithubIssues.html#fetch/2-parameters"},{"type":"function","title":"Returns - Issues.GithubIssues.fetch/2","doc":"A tuple with the status and the parsed body of the response.","ref":"Issues.GithubIssues.html#fetch/2-returns"},{"type":"function","title":"Issues.GithubIssues.handle_response/1","doc":"Handles the HTTP response from the GitHub API.","ref":"Issues.GithubIssues.html#handle_response/1"},{"type":"function","title":"Parameters - Issues.GithubIssues.handle_response/1","doc":"- response: A tuple containing the status and the response body.","ref":"Issues.GithubIssues.html#handle_response/1-parameters"},{"type":"function","title":"Returns - Issues.GithubIssues.handle_response/1","doc":"A tuple with the status and the parsed body of the response.","ref":"Issues.GithubIssues.html#handle_response/1-returns"},{"type":"function","title":"Issues.GithubIssues.issues_url/2","doc":"Constructs the URL for fetching issues from a GitHub repository.","ref":"Issues.GithubIssues.html#issues_url/2"},{"type":"function","title":"Parameters - Issues.GithubIssues.issues_url/2","doc":"- user: The GitHub username.\n- project: The GitHub repository name.","ref":"Issues.GithubIssues.html#issues_url/2-parameters"},{"type":"function","title":"Returns - Issues.GithubIssues.issues_url/2","doc":"The URL as a string.","ref":"Issues.GithubIssues.html#issues_url/2-returns"},{"type":"module","title":"Issues.TableFormatter","doc":"","ref":"Issues.TableFormatter.html"},{"type":"function","title":"Issues.TableFormatter.format_for/1","doc":"Generates the format string for the given column widths.","ref":"Issues.TableFormatter.html#format_for/1"},{"type":"function","title":"Parameters - Issues.TableFormatter.format_for/1","doc":"- column_widths: A list of integers representing the width of each column.","ref":"Issues.TableFormatter.html#format_for/1-parameters"},{"type":"function","title":"Returns - Issues.TableFormatter.format_for/1","doc":"The format string for the columns.","ref":"Issues.TableFormatter.html#format_for/1-returns"},{"type":"function","title":"Issues.TableFormatter.print_table_for_columns/2","doc":"Prints a table for the given rows and headers.","ref":"Issues.TableFormatter.html#print_table_for_columns/2"},{"type":"function","title":"Parameters - Issues.TableFormatter.print_table_for_columns/2","doc":"- rows: A list of maps representing the rows of the table.\n- headers: A list of strings representing the headers of the table.","ref":"Issues.TableFormatter.html#print_table_for_columns/2-parameters"},{"type":"function","title":"Issues.TableFormatter.printable/1","doc":"Converts a value to a printable string.","ref":"Issues.TableFormatter.html#printable/1"},{"type":"function","title":"Parameters - Issues.TableFormatter.printable/1","doc":"- str: The value to be converted.","ref":"Issues.TableFormatter.html#printable/1-parameters"},{"type":"function","title":"Returns - Issues.TableFormatter.printable/1","doc":"The printable string representation of the value.","ref":"Issues.TableFormatter.html#printable/1-returns"},{"type":"function","title":"Issues.TableFormatter.puts_in_columns/2","doc":"Prints the data in columns using the given format.","ref":"Issues.TableFormatter.html#puts_in_columns/2"},{"type":"function","title":"Parameters - Issues.TableFormatter.puts_in_columns/2","doc":"- data_by_columns: A list of lists, where each inner list represents a column.\n- format: The format string for the columns.","ref":"Issues.TableFormatter.html#puts_in_columns/2-parameters"},{"type":"function","title":"Issues.TableFormatter.puts_one_line_in_columns/2","doc":"Prints one line of fields in columns using the given format.","ref":"Issues.TableFormatter.html#puts_one_line_in_columns/2"},{"type":"function","title":"Parameters - Issues.TableFormatter.puts_one_line_in_columns/2","doc":"- fields: A list of strings representing the fields to be printed.\n- format: The format string for the columns.","ref":"Issues.TableFormatter.html#puts_one_line_in_columns/2-parameters"},{"type":"function","title":"Issues.TableFormatter.separator/1","doc":"Generates the separator string for the given column widths.","ref":"Issues.TableFormatter.html#separator/1"},{"type":"function","title":"Parameters - Issues.TableFormatter.separator/1","doc":"- column_widths: A list of integers representing the width of each column.","ref":"Issues.TableFormatter.html#separator/1-parameters"},{"type":"function","title":"Returns - Issues.TableFormatter.separator/1","doc":"The separator string for the columns.","ref":"Issues.TableFormatter.html#separator/1-returns"},{"type":"function","title":"Issues.TableFormatter.split_into_columns/2","doc":"Splits the rows into columns based on the headers.","ref":"Issues.TableFormatter.html#split_into_columns/2"},{"type":"function","title":"Parameters - Issues.TableFormatter.split_into_columns/2","doc":"- rows: A list of maps representing the rows of the table.\n- headers: A list of strings representing the headers of the table.","ref":"Issues.TableFormatter.html#split_into_columns/2-parameters"},{"type":"function","title":"Returns - Issues.TableFormatter.split_into_columns/2","doc":"A list of lists, where each inner list represents a column.","ref":"Issues.TableFormatter.html#split_into_columns/2-returns"},{"type":"function","title":"Issues.TableFormatter.widths_of/1","doc":"Calculates the widths of each column.","ref":"Issues.TableFormatter.html#widths_of/1"},{"type":"function","title":"Parameters - Issues.TableFormatter.widths_of/1","doc":"- columns: A list of lists, where each inner list represents a column.","ref":"Issues.TableFormatter.html#widths_of/1-parameters"},{"type":"function","title":"Returns - Issues.TableFormatter.widths_of/1","doc":"A list of integers representing the width of each column.","ref":"Issues.TableFormatter.html#widths_of/1-returns"}],"content_type":"text/markdown","producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}